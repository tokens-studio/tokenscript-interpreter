{
  "passed": 47,
  "failed": 5,
  "results": [
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/boolean_from_context.json",
      "name": "Return Boolean from context",
      "actualOutput": true,
      "actualOutputType": "Boolean",
      "expectedOutput": "true",
      "expectedOutputType": "Boolean"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/decimal_number.json",
      "name": "decimal number",
      "actualOutput": 123.45,
      "actualOutputType": "Number",
      "expectedOutput": "123.45",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/emoji_as_reference_name.json",
      "name": "ü¶ÑEmoji as reference name",
      "actualOutput": 2,
      "actualOutputType": "Number",
      "expectedOutput": "2",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/emoji_as_reference_value.json",
      "name": "ü¶ÑEmoji as reference value",
      "actualOutput": "üåà",
      "actualOutputType": "String",
      "expectedOutput": "üåà",
      "expectedOutputType": "String"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/emoji_as_variable_name.json",
      "name": "ü¶ÑEmoji as variable name",
      "actualOutput": 1,
      "actualOutputType": "Number",
      "expectedOutput": "1",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/emoji_as_variable_value.json",
      "name": "ü¶Ñemoji as variable value",
      "actualOutput": "üòç",
      "actualOutputType": "String",
      "expectedOutput": "üòç",
      "expectedOutputType": "String"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/hex_color_variable.json",
      "name": "hex color variable",
      "actualOutput": "#ff0000",
      "actualOutputType": "Color",
      "expectedOutput": "#ff0000",
      "expectedOutputType": "Color"
    },
    {
      "status": "failed",
      "path": "../tokenscript-compliance-suite/tests/basic/implicit_list_with_reference.json",
      "name": "implicit list with reference",
      "actualOutput": "1, 2, 3px",
      "actualOutputType": "List",
      "expectedOutput": "1 2 3px",
      "expectedOutputType": "ImplicitList",
      "error": "test.expectedOutput.join is not a function"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/reference_with_format_mixed_math.json",
      "name": "variable with unit inline mixed math",
      "actualOutput": "6rem",
      "actualOutputType": "NumberWithUnit",
      "expectedOutput": "6rem",
      "expectedOutputType": "NumberWithUnit"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/reference_with_unit.json",
      "name": "reference with unit",
      "actualOutput": "2rem",
      "actualOutputType": "NumberWithUnit",
      "expectedOutput": "2rem",
      "expectedOutputType": "NumberWithUnit"
    },
    {
      "status": "failed",
      "path": "../tokenscript-compliance-suite/tests/basic/reference_with_unit_inline_mixed.json",
      "name": "reference with unit inline mixed",
      "actualOutput": null,
      "actualOutputType": "Unknown",
      "expectedOutput": "6rem",
      "expectedOutputType": "NumberWithUnit",
      "error": "Invalid reference value type: object"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/return_boolean.json",
      "name": "Return Boolean",
      "actualOutput": true,
      "actualOutputType": "Boolean",
      "expectedOutput": "true",
      "expectedOutputType": "Boolean"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/simple_reference_space_insensitive.json",
      "name": "simple reference space insensitive",
      "actualOutput": 6,
      "actualOutputType": "Number",
      "expectedOutput": "6",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/unit_on_group.json",
      "name": "variable with unit inline mixed math",
      "actualOutput": "8rem",
      "actualOutputType": "NumberWithUnit",
      "expectedOutput": "8rem",
      "expectedOutputType": "NumberWithUnit"
    },
    {
      "status": "failed",
      "path": "../tokenscript-compliance-suite/tests/basic/unsupported_inline_op.json",
      "name": "Test unsupported inline op",
      "actualOutput": "6, ¬¥, 2",
      "actualOutputType": "List",
      "expectedOutput": "Invalid character '¬¥' at position 27.",
      "expectedOutputType": "Error"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/basic/while_loop.json",
      "name": "while loop",
      "actualOutput": 10,
      "actualOutputType": "Number",
      "expectedOutput": "10",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/color/color_conversion_hex_to_rgb.json",
      "name": "Color conversion hex to rgb",
      "actualOutput": "255, 87, 51",
      "actualOutputType": "List",
      "expectedOutput": "255, 87, 51",
      "expectedOutputType": "List"
    },
    {
      "status": "failed",
      "path": "../tokenscript-compliance-suite/tests/color/convert_rgb_to_linear_rgb.json",
      "name": "Convert RGB to linear RGB",
      "actualOutput": "1, 0, 0",
      "actualOutputType": "List",
      "expectedOutput": "1.0, 0, 0",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/combined_logic_condition.json",
      "name": "combined logic condition",
      "actualOutput": 10,
      "actualOutputType": "Number",
      "expectedOutput": "10",
      "expectedOutputType": "Number"
    },
    {
      "status": "failed",
      "path": "../tokenscript-compliance-suite/tests/logic/inline_boolean_operations.json",
      "name": "Inline boolean operations",
      "actualOutput": null,
      "actualOutputType": "Unknown",
      "expectedOutput": "true",
      "expectedOutputType": "Boolean",
      "error": "Line 1: Unary '!' not applicable to String.\nNear token: !"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/simple_boolean_if_condition.json",
      "name": "simple boolean if condition",
      "actualOutput": true,
      "actualOutputType": "Boolean",
      "expectedOutput": "true",
      "expectedOutputType": "Boolean"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/simple_numeric_if_condition.json",
      "name": "Simple numeric if condition",
      "actualOutput": 10,
      "actualOutputType": "Number",
      "expectedOutput": "10",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/test_infinite_loop.json",
      "name": "Test infinite loop",
      "actualOutput": null,
      "actualOutputType": "Unknown",
      "expectedOutput": "Max iterations exceeded in while loop",
      "expectedOutputType": "Error",
      "error": "Line 2: Max iterations exceeded in while loop.\nNear token: while"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/while_condition_boolean.json",
      "name": "While condition must be boolean",
      "actualOutput": null,
      "actualOutputType": "Unknown",
      "expectedOutput": "While loop condition must be a boolean.",
      "expectedOutputType": "Error",
      "error": "Line 2: While loop condition must be a boolean.\nNear token: 5"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/logic/while_simple_nested.json",
      "name": "While simple nested",
      "actualOutput": "3px",
      "actualOutputType": "NumberWithUnit",
      "expectedOutput": "3px",
      "expectedOutputType": "NumberWithUnit"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math/addition_with_reference.json",
      "name": "test addition with reference",
      "actualOutput": 7,
      "actualOutputType": "Number",
      "expectedOutput": "7",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math/factoring_out_negative_numbers_fractions.json",
      "name": "factoring out negative numbers and fractions",
      "actualOutput": 2.333333333333333,
      "actualOutputType": "Number",
      "expectedOutput": "2.333333333333333",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math/mixed_float_int.json",
      "name": "math with mixed float and integer",
      "actualOutput": 7,
      "actualOutputType": "Number",
      "expectedOutput": "7",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math/mutliplication_before_addition.json",
      "name": "multiplication and division before addition and subtraction",
      "actualOutput": 9,
      "actualOutputType": "Number",
      "expectedOutput": "9",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math/negative_numbers.json",
      "name": "addition and subtraction with negative numbers",
      "actualOutput": 6,
      "actualOutputType": "Number",
      "expectedOutput": "6",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/abs.json",
      "name": "abs inline",
      "actualOutput": 99999999999999,
      "actualOutputType": "Number",
      "expectedOutput": "99999999999999",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/average.json",
      "name": "inline min",
      "actualOutput": 2.5,
      "actualOutputType": "Number",
      "expectedOutput": "2.5",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/ceil.json",
      "name": "inline ceil",
      "actualOutput": 4,
      "actualOutputType": "Number",
      "expectedOutput": "4",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/floor.json",
      "name": "inline floor",
      "actualOutput": 3,
      "actualOutputType": "Number",
      "expectedOutput": "3",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/max.json",
      "name": "inline min",
      "actualOutput": 3,
      "actualOutputType": "Number",
      "expectedOutput": "3",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/min.json",
      "name": "inline min",
      "actualOutput": 1,
      "actualOutputType": "Number",
      "expectedOutput": "1",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/modulo.json",
      "name": "inline modulo",
      "actualOutput": 1,
      "actualOutputType": "Number",
      "expectedOutput": "1",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/pi.json",
      "name": "pi",
      "actualOutput": 3.14159,
      "actualOutputType": "Number",
      "expectedOutput": "3.14159",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/pow.json",
      "name": "pow inline",
      "actualOutput": 8,
      "actualOutputType": "Number",
      "expectedOutput": "8",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/round_down_0_5.json",
      "name": "round down on .5 to even number",
      "actualOutput": 2,
      "actualOutputType": "Number",
      "expectedOutput": "2",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/round_to.json",
      "name": "round to inline",
      "actualOutput": 9.33,
      "actualOutputType": "Number",
      "expectedOutput": "9.33",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/round_up_0_5.json",
      "name": "round up on .5 to even number",
      "actualOutput": 4,
      "actualOutputType": "Number",
      "expectedOutput": "4",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/round_up_0_51.json",
      "name": "round inline",
      "actualOutput": 3,
      "actualOutputType": "Number",
      "expectedOutput": "3",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/sqrt.json",
      "name": "sqrt inline",
      "actualOutput": 3,
      "actualOutputType": "Number",
      "expectedOutput": "3",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/math-functions/sum.json",
      "name": "inline sum",
      "actualOutput": 10,
      "actualOutputType": "Number",
      "expectedOutput": "10",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_concat.json",
      "name": "string inline concat",
      "actualOutput": "hello world",
      "actualOutputType": "String",
      "expectedOutput": "hello world",
      "expectedOutputType": "String"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_length.json",
      "name": "string inline length",
      "actualOutput": 4,
      "actualOutputType": "Number",
      "expectedOutput": "4",
      "expectedOutputType": "Number"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_lower.json",
      "name": "string inline upper",
      "actualOutput": "hello",
      "actualOutputType": "String",
      "expectedOutput": "hello",
      "expectedOutputType": "String"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_split_by_char.json",
      "name": "string inline split by character",
      "actualOutput": "H, E, L, L, O",
      "actualOutputType": "List",
      "expectedOutput": "H, E, L, L, O",
      "expectedOutputType": "List"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_split_by_emoji.json",
      "name": "string inline split by character",
      "actualOutput": "HELLO, WORLD",
      "actualOutputType": "List",
      "expectedOutput": "HELLO, WORLD",
      "expectedOutputType": "List"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_split_by_space.json",
      "name": "string inline split by character",
      "actualOutput": "HELLO, WORLD",
      "actualOutputType": "List",
      "expectedOutput": "HELLO, WORLD",
      "expectedOutputType": "List"
    },
    {
      "status": "passed",
      "path": "../tokenscript-compliance-suite/tests/string/inline_upper.json",
      "name": "string inline upper",
      "actualOutput": "HELLO",
      "actualOutputType": "String",
      "expectedOutput": "HELLO",
      "expectedOutputType": "String"
    }
  ]
}